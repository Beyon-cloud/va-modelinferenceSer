# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: com/beyoncloud/grpc/protos/infrence_model/rag_to_infrence_service.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.protobuf.struct_pb2
import com.beyoncloud.grpc.protos.infrence_model.rag_to_infrence_service_pb2


class RAGInfServiceBase(abc.ABC):

    @abc.abstractmethod
    async def get_inf_response(self, stream: 'grpclib.server.Stream[com.beyoncloud.grpc.protos.infrence_model.rag_to_infrence_service_pb2.RagToInfrenceRequest, com.beyoncloud.grpc.protos.infrence_model.rag_to_infrence_service_pb2.RagToInfrenceResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/raginfrence.RAGInfService/get_inf_response': grpclib.const.Handler(
                self.get_inf_response,
                grpclib.const.Cardinality.UNARY_UNARY,
                com.beyoncloud.grpc.protos.infrence_model.rag_to_infrence_service_pb2.RagToInfrenceRequest,
                com.beyoncloud.grpc.protos.infrence_model.rag_to_infrence_service_pb2.RagToInfrenceResponse,
            ),
        }


class RAGInfServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.get_inf_response = grpclib.client.UnaryUnaryMethod(
            channel,
            '/raginfrence.RAGInfService/get_inf_response',
            com.beyoncloud.grpc.protos.infrence_model.rag_to_infrence_service_pb2.RagToInfrenceRequest,
            com.beyoncloud.grpc.protos.infrence_model.rag_to_infrence_service_pb2.RagToInfrenceResponse,
        )
